#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'comfify'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/comfify` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/comfify now"
  exit 64
end

include GLI::App

program_desc 'a tool to help keep dotfiles in sync with other systems'

version Comfify::VERSION

subcommand_option_handling :normal
arguments :strict

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

desc 'create a new link for a directory to your home directory'
arg_name 'directory'
command :link do |c|
  c.action do |global_options,options,args|
    if File.file?(args.first)
      puts "Linking file #{File.expand_path(args.first)}"
      File.symlink(File.expand_path(args.first), File.expand_path("#{Dir.home}/#{args.first}"))
    elsif File.directory?(args.first)
      Dir.foreach(args.first) do |item|
        unless item == "." || item == ".."
          puts "Linking file #{item}"
          if (File.exist?(File.expand_path("#{Dir.home}/#{item}")))
            puts "   ** destination already exists, skipping **"
          else
            File.symlink(File.expand_path("#{args.first}/#{item}"),
                         File.expand_path("#{Dir.home}/#{item}"))
          end
        end
      end
    else
      puts "Unable to locate the directory to link"
    end
  end
end

exit run(ARGV)
